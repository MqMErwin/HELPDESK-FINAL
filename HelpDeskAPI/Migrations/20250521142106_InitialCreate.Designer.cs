// <auto-generated />
using System;
using HelpDeskAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelpDeskAPI.Migrations
{
    [DbContext(typeof(HelpDeskContext))]
    [Migration("20250521142106_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("HelpDeskAPI.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remitente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("HelpDeskAPI.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaResolucion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prioridad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TecnicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("HelpDeskAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HelpDeskAPI.Models.ChatMessage", b =>
                {
                    b.HasOne("HelpDeskAPI.Models.Ticket", "Ticket")
                        .WithMany("Mensajes")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("HelpDeskAPI.Models.Ticket", b =>
                {
                    b.HasOne("HelpDeskAPI.Models.User", "Tecnico")
                        .WithMany("TicketsAsignados")
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HelpDeskAPI.Models.User", "Usuario")
                        .WithMany("TicketsCreados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tecnico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HelpDeskAPI.Models.Ticket", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("HelpDeskAPI.Models.User", b =>
                {
                    b.Navigation("TicketsAsignados");

                    b.Navigation("TicketsCreados");
                });
#pragma warning restore 612, 618
        }
    }
}
